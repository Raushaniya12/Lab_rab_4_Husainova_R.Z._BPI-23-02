<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource ButtonForeground}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="3,2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border 
             x:Name="border"
             Background="{TemplateBinding Background}">
                        <ContentPresenter 
                 HorizontalAlignment="Center"
                 VerticalAlignment="Center"
                 Margin="{TemplateBinding Padding}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" 
                         Value="{DynamicResource ButtonHoverBackground}" />
                        </Trigger>
                        <Trigger Property="Tag" Value="Active">
                            <Setter TargetName="border" Property="Background" 
                         Value="{DynamicResource ButtonActiveBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Padding" Value="3" />
    </Style>

    <Style TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
    </Style>

    <Style TargetType="ListBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
    </Style>

    <Style TargetType="GroupBox">
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="GroupBox">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <ContentPresenter 
                 ContentSource="Header"
                 Grid.Row="0"
                 TextElement.Foreground="{TemplateBinding Foreground}"
                 Margin="0,0,0,5"/>
                        <Border Grid.Row="1">
                            <ContentPresenter />
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Border 
                 x:Name="border"
                 Background="{TemplateBinding Background}"
                 BorderBrush="{TemplateBinding BorderBrush}"
                 BorderThickness="{TemplateBinding BorderThickness}"
                 CornerRadius="2">
                            <ContentPresenter 
                     x:Name="contentPresenter"
                     HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                     VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                     Margin="{TemplateBinding Padding}"
                     Content="{TemplateBinding SelectionBoxItem}"
                     ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"/>
                        </Border>
                        <ToggleButton 
                 x:Name="toggleButton"
                 Background="Transparent"
                 BorderBrush="Transparent"
                 BorderThickness="0"
                 IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                 Focusable="False"
                 HorizontalAlignment="Right"
                 VerticalAlignment="Center"
                 Width="20"
                 Cursor="Hand">
                            <ToggleButton.Template>
                                <ControlTemplate TargetType="ToggleButton">
                                    <Grid Background="Transparent">
                                        <Path 
                                 x:Name="arrowPath"
                                 Data="M 0 0 L 4 4 L 8 0 Z"
                                 Fill="{Binding Foreground, RelativeSource={RelativeSource AncestorType=ComboBox}}"
                                 />
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="arrowPath" Property="Fill" 
                                         Value="{DynamicResource ButtonHoverBackground}" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </ToggleButton.Template>
                        </ToggleButton>
                        <Popup 
                 x:Name="PART_Popup"
                 Placement="Bottom"
                 IsOpen="{TemplateBinding IsDropDownOpen}"
                 AllowsTransparency="True"
                 Focusable="False"
                 PopupAnimation="Slide">
                            <Border 
                     Background="{DynamicResource TextBoxBackground}"
                     BorderBrush="{TemplateBinding BorderBrush}"
                     BorderThickness="{TemplateBinding BorderThickness}"
                     CornerRadius="2">
                                <ScrollViewer MaxHeight="200">
                                    <ItemsPresenter 
                             MinWidth="{Binding ActualWidth, RelativeSource={RelativeSource AncestorType=ComboBox}}" />
                                </ScrollViewer>
                            </Border>
                        </Popup>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ComboBoxItem">
        <Setter Property="Background" Value="{DynamicResource TextBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource TextBoxForeground}" />
        <Setter Property="Padding" Value="5,3" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border 
             x:Name="border"
             Background="{TemplateBinding Background}"
             Padding="{TemplateBinding Padding}">
                        <ContentPresenter />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" 
                         Value="{DynamicResource ButtonHoverBackground}" />
                            <Setter Property="Foreground" 
                         Value="{DynamicResource ButtonForeground}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="border" Property="Background" 
                         Value="{DynamicResource ButtonActiveBackground}" />
                            <Setter Property="Foreground" 
                         Value="{DynamicResource ButtonForeground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="RadioButton">
        <Setter Property="Foreground" Value="{DynamicResource WindowForeground}" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Padding" Value="4,0,0,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border 
                 x:Name="Indicator"
                 Width="16"
                 Height="16"
                 CornerRadius="8"
                 BorderThickness="1"
                 BorderBrush="{DynamicResource WindowForeground}"
                 Background="{DynamicResource TextBoxBackground}"
                 VerticalAlignment="Center"
                 HorizontalAlignment="Center"
                 Margin="0,0,4,0">
                            <Border 
                     x:Name="CheckMark"
                     Width="8"
                     Height="8"
                     CornerRadius="4"
                     Background="{DynamicResource TextBoxForeground}"
                     Visibility="Collapsed"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center" />
                        </Border>
                        <ContentPresenter 
                 Grid.Column="1"
                 VerticalAlignment="Center"
                 RecognizesAccessKey="True" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>